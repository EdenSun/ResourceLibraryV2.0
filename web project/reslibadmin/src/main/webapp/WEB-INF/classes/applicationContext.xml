<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx.xsd 
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
	<context:component-scan base-package="com.uce360.reslibadmin" />
	<mvc:annotation-driven />

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:db-config-dev.properties" />
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
	</bean>

	<!-- c3p0 datasource -->
	<bean id="dataSource" 
		class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${db.driver}"></property>
		<property name="jdbcUrl" value="${db.url}"></property>
		<property name="user" value="${db.username}"></property>
		<property name="password" value="${db.password}"></property>
		<property name="initialPoolSize" value="${db.initialPoolSize}"></property>
		<property name="minPoolSize" value="${db.minPoolSize}"></property>
		<property name="maxPoolSize" value="${db.maxPoolSize}"></property>
		<property name="maxIdleTime" value="${db.maxIdleTime}"></property>
		<property name="acquireIncrement" value="${db.acquireIncrement}"></property>
		<property name="idleConnectionTestPeriod" value="${db.idleConnectionTestPeriod}"></property>
		<property name="acquireRetryAttempts" value="${db.acquireRetryAttempts}"></property>
		<property name="breakAfterAcquireFailure" value="${db.breakAfterAcquireFailure}"></property>
		<property name="maxStatements" value="${db.maxStatements}"></property>
		<property name="testConnectionOnCheckout" value="${db.testConnectionOnCheckout}"></property>
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage"
			value="com.uce360.reslibadmin.mapper" />
	</bean>

	<!--事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="audit*" read-only="false" propagation="REQUIRED" />
			<tx:method name="save*" read-only="false" propagation="REQUIRED" />
			<tx:method name="mark*" read-only="false" propagation="REQUIRED" />
			<tx:method name="add*" read-only="false" propagation="REQUIRED" />
			<tx:method name="submit*" read-only="false" propagation="REQUIRED" />
			<tx:method name="publish*" read-only="false" propagation="REQUIRED" />
			<tx:method name="login*" read-only="false" propagation="REQUIRED" />
			<tx:method name="delete*" read-only="false" propagation="REQUIRED" />
			<tx:method name="del*" read-only="false" propagation="REQUIRED" />
			<tx:method name="remove*" read-only="false" propagation="REQUIRED" />
			<tx:method name="update*" read-only="false" propagation="REQUIRED" />
			<tx:method name="get*" read-only="true" propagation="REQUIRED" />
			<tx:method name="list*" read-only="true" propagation="REQUIRED" />
			<tx:method name="*" read-only="true" propagation="REQUIRES_NEW" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="serviceMethods"
			expression="execution (* com.uce360.lzsz.psychology.resourcelib.service.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethods" />
	</aop:config>


	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<!-- override these for application-specific URLs if you like: -->
		<property name="loginUrl" value="/index" />
		<property name="successUrl" value="/home.jsp" />
		<property name="unauthorizedUrl" value="/unauthorized.jsp" />
		<!-- The 'filters' property is not necessary since any declared javax.servlet.Filter 
			bean -->
		<!-- defined will be automatically acquired and available via its beanName 
			in chain -->
		<!-- definitions, but you can perform instance overrides or name aliases 
			here if you like: -->
		<!-- <property name="filters"> <util:map> <entry key="anAlias" value-ref="someFilter"/> 
			</util:map> </property> -->
		<property name="filterChainDefinitions">
			<value>
				# some example chain definitions:
				/admin/** = authc
				/assets/** = anon
				/auth/** = anon
				/index = anon
				/psycology-test = anon
				/specialty-construction = anon
				/case-center = anon
				/course-center = anon
				/resource-center = anon

				#/admin/** = authc, roles[admin]
				#/docs/** = authc, perms[document:read]
				# more URL-to-FilterChain definitions here
			</value>
		</property>
	</bean>

	<!-- Define any javax.servlet.Filter beans you want anywhere in this application 
		context. -->
	<!-- They will automatically be acquired by the 'shiroFilter' bean above 
		and made available -->
	<!-- to the 'filterChainDefinitions' property. Or you can manually/explicitly 
		add them -->
	<!-- to the shiroFilter's 'filters' Map if desired. See its JavaDoc for 
		more details. -->
	<!-- <bean id="someFilter" class="..."/> <bean id="anotherFilter" class="..."> 
		... </bean> -->

	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- Single realm app. If you have multiple realms, use the 'realms' property 
			instead. -->
		<property name="realm" ref="authRealm" />
		<!-- By default the servlet container sessions will be used. Uncomment 
			this line to use shiro's native sessions (see the JavaDoc for more): -->
		<!-- <property name="sessionMode" value="native"/> -->
	</bean>
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<!-- Enable Shiro Annotations for Spring-configured beans. Only run after -->
	<!-- the lifecycleBeanProcessor has run: -->
	<!-- <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" 
		depends-on="lifecycleBeanPostProcessor"/> <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor"> 
		<property name="securityManager" ref="securityManager"/> </bean> -->
</beans>